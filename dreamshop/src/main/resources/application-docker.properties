# Database Configuration - Fixed for Docker
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# JWT Configuration
auth.token.jwt.secret=${AUTH_TOKEN_JWT_SECRET}
auth.token.expirationInMils=${AUTH_TOKEN_EXPIRATION_IN_MILS}

# API Prefix
apiPrefix=/api/v1

# File Upload (without MinIO)
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Actuator endpoints
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized

# Logging
logging.level.com.mlv.dreamshop=INFO
logging.level.org.springframework.security=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# MinIO - Sử dụng container name
minio.endpoint=http://minio:9000
minio.accessKey=minioadmin
minio.secretKey=minioadmin123
minio.bucketName=dreamshop-images

# Email Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:mlongvy0708@gmail.com}
spring.mail.password=${MAIL_PASSWORD:vrjqdtrxhuqlryhm}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=${MAIL_HOST:smtp.gmail.com}

# Application email settings
app.mail.from=${MAIL_FROM:noreply@dreamshop.com}
app.mail.name=${MAIL_NAME:DreamShop_Email_Service}

# Kafka Configuration for Docker
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.consumer.group-id=order-confirmation-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer